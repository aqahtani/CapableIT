mixin fieldLabel(lbl)
  h4: .label.label-default.field-label= lbl 

//- one level box: used by hard, soft, and english levelers 
mixin levelBox(title, label, kind, description, color)
  .btn-group: button(
    class="#{kind}"
    style="background-color:#{color}; border-style:none; white-space: nowrap;"
    data-container="body"
    data-toggle="popover" 
    data-trigger="focus"
    data-placement="bottom"
    data-content="#{description}"
    data-original-title=""
    tabindex="0" 
    title="#{title}").btn.btn-xs= label

//- skill info icon and popover: used by hard, soft, and english levelers 
mixin infoIcon(title, description)
  span.bs-component
    a(
      style="color:lightgray;"
      data-container="body"
      data-toggle="popover" 
      data-trigger="focus"
      data-placement="bottom"
      data-content="#{description}"
      data-original-title=""
      tabindex="0" 
      title="#{title}"): span.glyphicon.glyphicon-info-sign


//- Authority as RACI
mixin authority(raci)
  case raci
    when "ACCOUNTABLE"
      .label.label-danger= raci
    when "RESPONSIBLE"
      .label.label-warning= raci
    when "CONSULTED"
      .label.label-success= raci
    when "INFORMED"
      .label.label-info= raci
    default
      .label.label-default= raci

//- Hard Skill Leveler
mixin hardLeveler(skill, target, current)
  .row
    .col-sm-7
      h5
        | #{skill.title}  
        +infoIcon(skill.title, skill.description)
    .col-sm-5: .bs-component: .btn-group.btn-group-justified
      for i in [1, 2, 3, 4, 5, 6, 7]
        if (i == target && i == current)
          - var kind = "btn-success"
        else if (i == target)
          - var kind = "btn-danger"
        else if (i == current)
          - var kind = "btn-info"
        else
          - var kind = "btn-default"
        
        if (i < skill.levels.min || i > skill.levels.max)
          - var kind = kind + " disabled"
        
        +levelBox(skill.title, i, kind, skill.levels.descriptions[i - skill.levels.min])

//- Soft Skill Leveler
mixin softLeveler(skill, target, current)
  .row
    .col-sm-7
      h5
        | #{skill.title}  
        +infoIcon(skill.title, skill.description)
    .col-sm-5: .bs-component: .btn-group.btn-group-justified
      for i in [1, 2, 3, 4, 5]
        if (i == target && i == current)
          - var kind = "btn-success"
        else if (i == target)
          - var kind = "btn-warning"
        else if (i == current)
          - var kind = "btn-info"
        else
          - var kind = "btn-default"

        +levelBox(skill.title, i, kind, skill.levelDescriptions[i - 1])

//- English Language Leveler
mixin englishLeveler(target, current)
  .bs-component: .btn-group.btn-group-justified
    for i in ['A0', 'A1', 'A2', 'B1', 'B2', 'C1', 'C2']
      if (target && i == target.grade)
          +levelBox(target.title, i, "btn-default", target.description, target.color)
      else if (current && i == current.grade)
          +levelBox(current.title, i, "btn-default", current.description, current.color)
      else
          +levelBox("", i, "btn-default disabled", "")

mixin levellabels(levels,kind)
  for level in levels
    span &nbsp;
    .label(class=kind, style="display: inline-block;") #{level.grade}. #{level.title}

//- Hard Skill Level: display a given skill with its levels
//- this expects the skill to have category and subcategory populated
mixin hardSkill(skill)
  .row
    .col-sm-7
      h5
        | #{skill.title}  
        +infoIcon(skill.title, skill.description)
    .col-sm-5: .bs-component: .btn-group.btn-group-justified
      for i in [1, 2, 3, 4, 5, 6, 7]
        - var kind = "btn-default"
        if (i < skill.levels.min || i > skill.levels.max)
          - var kind = kind + " disabled"
        +levelBox(skill.title, i, kind, skill.levels.descriptions[i - skill.levels.min], skill.category.color)

//- Soft Skill Leveler
mixin softSkill(skill)
  .row
    .col-sm-7
      h5
        | #{skill.title}  
        +infoIcon(skill.title, skill.description)
    .col-sm-5: .bs-component: .btn-group.btn-group-justified
      for i in [1, 2, 3, 4, 5]
        - var kind = "btn-default"
        +levelBox(skill.title, i, kind, skill.levelDescriptions[i - 1], skill.color)

mixin categoryButton(category)
  a.list-group-item(href="#" + category.slug, style="border-style:none; color:white; background-color:#{category.color}")
    h4 #{category.title}

mixin categoryLabel(category)
  h2(id="#{category.slug}"): span.label(style="display:inline-block;background-color:#{category.color}")
    | #{category.title}

mixin subCategoryLabel(subcategory)
  h3: span.label(style="display:inline-block;background-color:#{subcategory.category.color};opacity:0.5")
    | #{subcategory.title}

mixin topLink()
  a.pull-right(href="#top"): span.glyphicon.glyphicon-chevron-up


mixin skillLabel(skill,kind)
  h4: span.label(class=kind)= skill.title

mixin percent(value)
  .progress
    .progress-bar.progress-bar-info(aria-valuenow=value, aria-valuemin='0', aria-valuemax='100', style='min-width: 2em; width: #{value}%;')
      | #{value}%
